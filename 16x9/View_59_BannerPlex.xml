<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_59_BannerPlex">
		<control type="group">
			<include condition="!Skin.HasSetting(low.power)">Animation.Common</include>
			<include condition="Skin.HasSetting(low.power)">Animation.Common.Lowpower</include>
			<include condition="!Skin.HasSetting(low.power)">Animation.Common.Overlay</include>
			<include condition="Skin.HasSetting(low.power)">Animation.Common.Overlay.Lowpower</include>
			<visible>Control.IsVisible(59)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<animation effect="slide" end="-159,0" center="auto" time="200" condition="Container.Column(2) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="159,0" center="auto" time="200" condition="Container.Column(0) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-20,0" center="auto" time="200" condition="Container.Column(2) + Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="20,0" center="auto" time="200" condition="Container.Column(0) + Control.HasFocus(60)">Conditional</animation>
			<control type="panel" id="59">
				<visible>Container.Content(movies) | Container.Content(tvshows)</visible>
				<top>TopPad</top>
				<right>10</right>
				<left>10</left>
				<height>720</height>
				<onleft>60</onleft>
				<onright>60</onright>
				<onup>59</onup>
				<ondown>59</ondown>
				<preloaditems>2</preloaditems>
				<pagecontrol>60</pagecontrol>
				<viewtype label="31741">list</viewtype>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="144" width="633.33">
					<control type="image">
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture diffuse="-" background="true">$VAR[BannerImage]</texture>
					</control>
					<include>View_59_ItemLayout</include>
				</itemlayout>
				<focusedlayout height="144" width="633.33">
					<control type="button">
						<texturefocus>-</texturefocus>
						<texturenofocus>-</texturenofocus>
						<onfocus>ClearProperty(cfa_ignore_set,home)</onfocus>
						<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
						<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
						<onfocus condition="!Skin.HasSetting(low.power)">RunScript(script.colorbox,info=blur,id='"$VAR[PosterImage]"',radius=$VAR[VideoInfoBlurLevel],prefix=VideoInfo)</onfocus>
					</control>
					<control type="group">
						<control type="image">
							<width>100%</width>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true" colordiffuse="$VAR[BorderHighlightColour]">$VAR[FocusedBorderImage]</texture>
						</control>
						<animation type="Focus" reversible="false">
							<effect type="zoom" start="160,164" end="158,160" time="200" center="auto" tween="quadratic" easing="out"/>
							<effect type="rotate" end="1.5" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<animation effect="slide" start="0,0" end="0,24" center="auto" time="0" condition="Container.Row(0)">Conditional</animation>
						<animation effect="slide" start="0,0" end="0,-24" center="auto" time="0" condition="Container.Row(4)">Conditional</animation>
					</control>
					<control type="group">
						<control type="image">
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[BannerImage]</texture>
						</control>
						<control type="image">
							<description>Title overlay</description>
							<texture colordiffuse="77000000">common/white.png</texture>
							<visible>Control.HasFocus(59)</visible>
						</control>
						<include>View_59_FocusLayout</include>
						<animation type="Focus">
							<effect type="zoom" start="100" end="150" time="150" tween="sine" easing="inout" center="auto" />
						</animation>
						<animation effect="slide" start="0,0" end="0,24" center="auto" time="0" condition="Container.Row(0)">Conditional</animation>
						<animation effect="slide" start="0,0" end="0,-24" center="auto" time="0" condition="Container.Row(4)">Conditional</animation>
					</control>
				</focusedlayout>
			</control>
			<include>Furniture_ScrollbarBannerPlex</include>
		</control>
	</include>
	<include name="View_59_ItemLayout">
		<control type="label" id="13370">
			<left>10</left>
			<top>10</top>
			<width>100</width>
			<height>100</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbig</font>
			<label>$VAR[SwapDefaultImage]</label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		</control>
		<control type="label">
			<left>130</left>
			<right>10</right>
			<bottom>10</bottom>
			<height>26</height>
			<align>right</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
		<control type="group">
			<control type="label">
				<right>8</right>
				<top>5</top>
				<width>40</width>
				<height>40</height>
				<font>symbolback</font>
				<label>$VAR[PercentWatchedBack]</label>
				<textcolor>$VAR[BackingColourHighlight]</textcolor>
			</control>
		<control type="group">
			<control type="label">
				<centerright>28</centerright>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<align>center</align>
				<font>minisymbol</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
				<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
				<scroll>true</scroll>
				<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
			</control>
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
				<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
				<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>7</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
                    <label>$VAR[ItemsPlayingIcon]</label>
                    <textcolor>$VAR[PlayingColourHighlight]</textcolor>
                    <selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[WatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[ResumeColourHighlight]</textcolor>
								<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
		</control>
		</control>
	</include>
	<include name="View_59_FocusLayout">
		<control type="label" id="13370">
			<left>10</left>
			<top>10</top>
			<width>100</width>
			<height>100</height>
			<aligny>center</aligny>
			<align>center</align>
			<font>symbolbig</font>
			<label>$VAR[SwapDefaultImage]</label>
			<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
		</control>
		<control type="label">
			<left>130</left>
			<right>10</right>
			<bottom>10</bottom>
			<height>26</height>
			<align>right</align>
			<aligny>center</aligny>
			<font>Tiny</font>
			<textcolor>$VAR[ColorboxPowerModeColor]</textcolor>
			<label>$INFO[ListItem.Label2]</label>
		</control>
		<control type="group">
			<control type="label">
				<right>8</right>
				<top>5</top>
				<width>40</width>
				<height>40</height>
				<font>symbolback</font>
				<label>$VAR[PercentWatchedBack]</label>
				<textcolor>$VAR[BackingColourHighlight]</textcolor>
			</control>
		<control type="group">
			<control type="label">
				<centerright>28</centerright>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<align>center</align>
				<font>minisymbol</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
				<scroll>true</scroll>
				<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
			</control>
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
				<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>7</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
                    <label>$VAR[ItemsPlayingIcon]</label>
                    <textcolor>$VAR[PlayingColourHighlight]</textcolor>
                    <selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[WatchedColourHighlight]</textcolor>
				<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
		</control>
		<control type="group">
			<control type="label">
				<right>10</right>
				<top>10</top>
				<width>32</width>
				<height>32</height>
				<font>symbolview</font>
				<label>$VAR[PercentWatchedLabel]</label>
				<textcolor>$VAR[ResumeColourHighlight]</textcolor>
				<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
			</control>
			<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
		</control>
		</control>
	</include>
</includes>
