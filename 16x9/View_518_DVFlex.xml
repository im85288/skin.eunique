<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_518_DVFlex">
		<control type="group">
			<animation type="WindowOpen" reversible="true">
				<effect type="fade" start="00" end="100" time="1000" tween="quadratic" easing="out" delay="500" />
			</animation>
			<control type="image">
				<include>Dimensions_Fullscreen</include>
				<animation type="Visible" reversible="false">
					<effect type="fade" start="00" end="100" time="100" tween="quadratic" easing="out" />
				</animation>
				<animation type="WindowOpen" reversible="true">
					<effect type="fade" start="00" end="100" time="200" tween="quadratic" easing="out" delay="1000" />
				</animation>
				<animation type="WindowClose" reversible="true">
					<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out" />
				</animation>
				<animation type="Hidden" reversible="true">
					<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out" />
				</animation>
				<animation type="Conditional" reversible="true" condition="StringCompare(Window(home).Property(ImageUpdating),1)">
					<effect type="fade" start="0" end="100" time="200" tween="quadratic" easing="out"/>
				</animation>
				<animation type="Conditional" reversible="true" condition="StringCompare(Window(home).Property(ImageUpdating),0)">
					<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out"/>
				</animation>
				<aspectratio align="center">scale</aspectratio>
				<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">$VAR[ColorboxPowerModeImage]</texture>
				<visible>Control.IsVisible(518) + !Skin.HasSetting(low.power)</visible>
				<visible>!Skin.HasSetting(lights.out)</visible>
				<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + !Window.IsVisible(DialogVideoInfo.xml)</visible>
			</control>
			<control type="image">
				<include>Dimensions_Fullscreen</include>
				<animation type="Visible" reversible="false">
					<effect type="fade" start="00" end="35" time="100" tween="quadratic" easing="out" />
				</animation>
				<animation type="WindowOpen" reversible="true">
					<effect type="fade" start="00" end="35" time="100" tween="quadratic" easing="out" delay="1000" />
				</animation>
				<animation type="WindowClose" reversible="true">
					<effect type="fade" start="35" end="00" time="200" tween="quadratic" easing="out" />
				</animation>
				<animation type="Hidden" reversible="true">
					<effect type="fade" start="35" end="00" time="200" tween="quadratic" easing="out" />
				</animation>
				<aspectratio align="center">scale</aspectratio>
				<texture colordiffuse="$VAR[ColorboxPowerModeColor]">special://skin/extras/backgrounds/pixel.jpg</texture>
				<visible>Control.IsVisible(518) + !Skin.HasSetting(low.power)</visible>
				<visible>!Skin.HasSetting(lights.out)</visible>
				<visible>![[Skin.HasSetting(global.showvideo) + Player.HasVideo] | [Skin.HasSetting(global.showvisualisation) + Player.HasAudio]] + !Window.IsVisible(DialogVideoInfo.xml)</visible>
				<visible>!StringCompare(Skin.String(background.effect),None)</visible>
			</control>
			<control type="group">
				<include condition="!Skin.HasSetting(low.power)">Animation.Common</include>
				<include condition="Skin.HasSetting(low.power)">Animation.Common.Lowpower</include>
				<include condition="!Skin.HasSetting(low.power)">Animation.Common.Overlay</include>
				<include condition="Skin.HasSetting(low.power)">Animation.Common.Overlay.Lowpower</include>
				<visible>Control.IsVisible(518)</visible>
				<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
				<control type="group">
					<top>TopPad</top>
					<left>270</left>
					<control type="image">
						<top>-5</top>
						<width>800</width>
						<height>210</height>
						<texture>$VAR[Container518Logo]</texture>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
						<fadetime>50</fadetime>
					</control>
				</control>
				<control type="group">
					<top>368</top>
					<left>10</left>
					<width>220</width>
					<height>920</height>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<label>31823</label>
						<visible>!Container.Content(tvshows) + !Container.Content(episodes) + !Container.Content(seasons)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<label>33054</label>
						<visible>Container.Content(tvshows)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<label>$INFO[ListItem.Label]</label>
						<visible>Container.Content(seasons)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<label>31824</label>
						<visible>Container.Content(episodes)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<top>38</top>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<animation type="conditional" condition="true" reversible="false">
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out"/>
						</animation>
						<label fallback="19055">$INFO[ListItem.Season]</label>
						<visible>Container.Content(tvshows)</visible>
					</control>
					<control type="textbox">
						<right>0</right>
						<left>0</left>
						<height>100</height>
						<top>38</top>
						<align>right</align>
						<font>TinyBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<label fallback="19055">$VAR[LabelDirector]</label>
						<autoscroll delay="500" time="1000" repeat="500"/>
						<fadetime>500</fadetime>
						<visible>!Container.Content(seasons) + !Container.Content(tvshows) + !Container.Content(episodes)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<height>38</height>
						<top>38</top>
						<aligny>center</aligny>
						<align>right</align>
						<font>TinyBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<label fallback="19055">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</label>
						<visible>Container.Content(seasons)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<height>38</height>
						<top>38</top>
						<aligny>center</aligny>
						<align>right</align>
						<font>TinyBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<label fallback="19055">$INFO[ListItem.Premiered]</label>
						<visible>Container.Content(episodes)</visible>
					</control>
					<control type="label">
						<right>0</right>
						<left>0</left>
						<top>143</top>
						<aligny>center</aligny>
						<align>right</align>
						<font>SmallBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<label>31819</label>
					</control>
					<control type="textbox">
						<left>10</left>
						<height>148</height>
						<top>184</top>
						<align>right</align>
						<font>TinyBold</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<label fallback="19055">$INFO[Window(Home).Property(SkinHelper.ListItemCast)]</label>
						<autoscroll delay="8000" time="1200" repeat="1000"/>
						<fadetime>500</fadetime>
					</control>
				</control>
				<control type="grouplist">
					<top>368</top>
					<height>42</height>
					<left>270</left>
					<right>10</right>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>symbol</font>
						<height>38</height>
						<textcolor>$VAR[ColourHighlight]</textcolor>
						<width>auto</width>
						<label>ï‘±</label>
						<visible>Container.Content(movies) + !IsEmpty(ListItem.PlayCount)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="-  ">$INFO[ListItem.PlayCount,,  ]</label>
						<visible>Container.Content(movies) + !IsEmpty(ListItem.PlayCount)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>symbol</font>
						<textcolor>selective yellow</textcolor>
						<height>38</height>
						<width>auto</width>
						<label>ï‹ </label>
						<visible>!IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="-  ">$INFO[ListItem.Rating,,  ]</label>
						<visible>!IsEmpty(ListItem.Rating)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>symbol</font>
						<textcolor>$VAR[RottenTomatoesIconColour]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label>$VAR[RottenTomatoesIcon]</label>
						<visible>!StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesRating),n/a)</visible>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label>$INFO[Window(Home).Property(SkinHelper.RottenTomatoesRating),,%  ]</label>
						<visible>!StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesRating),n/a)</visible>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="button">
						<width>39</width>
						<height>39</height>
						<textcolor>black</textcolor>
						<textoffsetx>0</textoffsetx>
						<label>$INFO[Window(Home).Property(SkinHelper.RottenTomatoesAudienceRating)]</label>
						<font>TinyBold</font>
						<aligny>center</aligny>
						<align>center</align>
						<texturefocus colordiffuse="$VAR[CommunityRatingColour]">common/white.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[CommunityRatingColour]">common/white.png</texturenofocus>
						<visible>!IsEmpty(Window(Home).Property(SkinHelper.RottenTomatoesAudienceRating))</visible>
						<visible>!StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesAudienceRating),n/a)</visible>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="-">$VAR[GenreFormatted,,  ]</label>
						<visible>StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesAudienceRating),n/a)</visible>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="-">$VAR[GenreFormatted,  ,  ]</label>
						<visible>!StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesAudienceRating),n/a)</visible>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="  -  ">$INFO[ListItem.Year,,  ]</label>
						<visible>Container.Content(movies)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label fallback="">$INFO[Window(Home).Property(SkinHelper.RottenTomatoesBoxOffice),,  ]</label>
						<visible>Container.Content(movies) + !StringCompare(Window(Home).Property(SkinHelper.RottenTomatoesBoxOffice),N/A)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label>$INFO[ListItem.Title]$INFO[ListItem.Season,   ,]$INFO[ListItem.Episode,x]$VAR[LabelDuration,   ,]</label>
						<visible>!Container.Content(movies) + !Container.Content(TVShows)</visible>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<align>left</align>
						<font>Medium</font>
						<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
						<height>38</height>
						<width>auto</width>
						<label>$INFO[ListItem.Studio,,   ]$INFO[ListItem.Season]$INFO[ListItem.Episode,x]$VAR[LabelDuration,   ,]</label>
						<visible>Container.Content(TVShows)</visible>
					</control>
				</control>
				<control type="textbox">
					<description>textarea</description>
					<left>270</left>
					<width>1100</width>
					<top>425</top>
					<height>276</height>
					<align>left</align>
					<font>Medium</font>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<label>$VAR[PlotCritic]</label>
					<visible>!Container.Content(episodes)</visible>
				</control>
				<control type="textbox">
					<description>textarea</description>
					<left>270</left>
					<width>720</width>
					<top>425</top>
					<height>276</height>
					<align>left</align>
					<font>Medium</font>
					<textcolor>$VAR[EmbyMenuTextColourHighlight]</textcolor>
					<label>$VAR[PlotCritic]</label>
					<visible>Container.Content(episodes)</visible>
				</control>
				<control type="wraplist" id="518">
					<visible>[Container.Content(movies) | Container.Content(sets)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)</visible>
					<animation effect="slide" end="-3000,0" start="0" time="0" condition="Container.Content(episodes)">Conditional</animation>
					<bottom>22</bottom>
					<right>-4000</right>
					<left>-40</left>
					<onup condition="!Skin.HasSetting(global.kioskmode)">9000</onup>
					<ondown>60</ondown>
					<pagecontrol>60</pagecontrol>
					<height>337</height>
					<scrolltime tween="cubic" easing="out">500</scrolltime>
					<orientation>horizontal</orientation>
					<focusposition >7</focusposition>
					<viewtype label="32076">list</viewtype>
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout height="337" width="222" condition="!Container.Content(episodes)">
						<control type="group">
							<animation effect="zoom" end="90" start="100" time="50" center="auto" condition="System.IdleTime(2)">Conditional</animation>
							<control type="image">
								<aspectratio scalediffuse="false">scale</aspectratio>
								<texture background="true">$VAR[PosterImage]</texture>
							</control>
							<control type="label">
								<centerright>34</centerright>
								<centertop>35</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="group">
								<control type="label">
									<centerright>34</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<align>center</align>
									<font>minisymbol</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<scroll>true</scroll>
									<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<centerright>32</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="label">
								<centerright>29</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[ItemsPlayingIcon]</label>
								<textcolor>$VAR[PlayingColourHighlight]</textcolor>
								<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<centerright>32</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel]</label>
								<textcolor>$VAR[WatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="label">
								<centerright>32</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel]</label>
								<textcolor>$VAR[ResumeColourHighlight]</textcolor>
								<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
							<control type="progress">
								<bottom>0</bottom>
								<height>8</height>
								<info>ListItem.PercentPlayed</info>
								<overlaytexture>-</overlaytexture>
								<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
								<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
								<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
								<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
								<visible>ListItem.IsResumable</visible>
							</control>
						</control>
					</itemlayout>
					<itemlayout height="337" width="600" condition="Container.Content(episodes)">
						<control type="group">
							<animation effect="zoom" end="85" start="100" time="200" center="auto" condition="System.IdleTime(3)">Conditional</animation>
							<control type="image">
								<bottom>30</bottom>
								<aspectratio align="left" aligny="center" scalediffuse="false">scale</aspectratio>
								<texture background="true">$VAR[FanartImage]</texture>
							</control>
							<control type="progress">
								<bottom>30</bottom>
								<height>8</height>
								<info>ListItem.PercentPlayed</info>
								<overlaytexture>-</overlaytexture>
								<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
								<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
								<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
								<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
								<visible>ListItem.IsResumable</visible>
							</control>
							<control type="label">
								<centerright>34</centerright>
								<centertop>35</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="label">
								<centerright>32</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel]</label>
								<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="label">
								<centerright>29</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[ItemsPlayingIcon]</label>
								<textcolor>$VAR[PlayingColourHighlight]</textcolor>
								<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="label">
								<centerright>32</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel]</label>
								<textcolor>$VAR[WatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="label">
								<centerright>32</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel]</label>
								<textcolor>$VAR[ResumeColourHighlight]</textcolor>
								<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
						</control>
					</itemlayout>
					<focusedlayout height="337" width="222" condition="!Container.Content(episodes)">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
							<onfocus>ClearProperty(cfa_ignore_set,home)</onfocus>
						</control>
					</focusedlayout>
					<focusedlayout height="337" width="600" condition="Container.Content(episodes)">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
							<onfocus>ClearProperty(cfa_ignore_set,home)</onfocus>
						</control>
						<control type="group">
							<animation effect="zoom" end="140" start="100" time="200" center="auto">Focus</animation>
							<animation effect="slide" end="0,-26" start="0" time="200" center="auto" condition="Control.HasFocus(518)">Conditional</animation>
							<control type="image">
								<aspectratio scalediffuse="false">stretch</aspectratio>
								<texture background="true" colordiffuse="$VAR[BorderHighlightColour]">$VAR[FocusedBorderImage]</texture>
								<animation effect="zoom" end="102" time="0" center="auto">Focus</animation>
							</control>
							<control type="image">
								<bottom>31</bottom>
								<aspectratio scalediffuse="false">scale</aspectratio>
								<texture background="true">$VAR[FanartImage]</texture>
							</control>
							<control type="progress">
								<bottom>32</bottom>
								<height>8</height>
								<info>ListItem.PercentPlayed</info>
								<overlaytexture>-</overlaytexture>
								<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
								<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
								<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
								<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
								<visible>ListItem.IsResumable</visible>
							</control>
							<control type="label">
								<font>SmallHeaderFont</font>
								<textcolor>$VAR[ColourSelected]</textcolor>
								<height>60</height>
								<bottom>-11</bottom>
								<left>0</left>
								<right>0</right>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
							</control>
							<animation effect="slide" end="0,-10" start="0" time="200" center="auto" condition="Control.HasFocus(518)">Conditional</animation>
							<control type="group">
								<animation effect="slide" end="0,-10" start="0" time="200" center="auto" condition="Control.HasFocus(518)">Conditional</animation>
								<control type="label">
									<centerright>40</centerright>
									<centertop>35</centertop>
									<width>40</width>
									<height>40</height>
									<font>symbolback</font>
									<label>$VAR[PercentWatchedBack]</label>
									<textcolor>$VAR[BackingColourHighlight]</textcolor>
									<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
								</control>
								<control type="label">
									<centerright>38</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
								</control>
								<control type="label">
									<centerright>38</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[ItemsPlayingIcon]</label>
									<textcolor>$VAR[PlayingColourHighlight]</textcolor>
									<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
									<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
								</control>
								<control type="label">
									<centerright>38</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[WatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
									<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
								</control>
								<control type="label">
									<centerright>38</centerright>
									<centertop>35</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[ResumeColourHighlight]</textcolor>
									<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
									<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
								</control>
							</control>
						</control>
					</focusedlayout>
				</control>
				<control type="group">
					<visible>!Container.Content(episodes)</visible>
					<control type="image">
						<bottom>22</bottom>
						<width>1920</width>
						<right>0</right>
						<align>left</align>
						<height>337</height>
						<texture colordiffuse="$VAR[EmbyMenuColourHighlight]" flipx="true">diffuse/widget-shadow.png</texture>
						<animation effect="fade" start="80" end="80" time="0" delay="0" tween="quadratic" easing="out" condition="true">Conditional</animation>
						<animation effect="fade" start="80" end="0" time="50" delay="0" tween="quadratic" easing="out" condition="System.IdleTime(2)">Conditional</animation>
					</control>
					<control id="123231" type="wraplist">
						<top>-455</top>
						<itemlayout height="201" width="133.33333333">
							<!--
						<control type="label">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<height>201</height>
							<aligny>center</aligny>
							<align>center</align>
							<font>symbolbiggest</font>
							<label>ïƒ‘</label>
							<textcolor>$VAR[ColorboxPowerModeColor]</textcolor>
							<fadetime>300</fadetime>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio align="center" aligny="top">scale</aspectratio>
							<texture colordiffuse="$VAR[ColorboxPowerModeColor]" background="true">$VAR[PosterImage]</texture>
							<fadetime>200</fadetime>
						</control>
						-->
						</itemlayout>
						<focusedlayout height="201" width="133.33333333">
						</focusedlayout>
						<content target="video">$VAR[DefWidgetCast]</content>
					</control>
					<include>Furniture_ScrollbarNF</include>
				</control>
				<control type="group">
					<visible>!Container(518).Content(episodes)</visible>
					<control type="image">
						<top>445</top>
						<width>420</width>
						<right>85</right>
						<align>left</align>
						<height>623</height>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture background="true" colordiffuse="$VAR[BorderHighlightColour]">$VAR[FocusedBorderImage]</texture>
						<animation effect="zoom" end="107" time="0" center="auto">Focus</animation>
				</control>
					<control type="image">
						<top>455</top>
						<width>400</width>
						<right>95</right>
						<align>left</align>
						<height>603</height>
						<texture background="true">$VAR[PosterImage518]</texture>
					</control>
					<control type="progress">
						<top>1050</top>
						<width>400</width>
						<right>95</right>
						<height>8</height>
						<info>Container(518).ListItem.PercentPlayed</info>
						<overlaytexture>-</overlaytexture>
						<texturebg colordiffuse="$VAR[BackingColourHighlight]">osd/progress-bg.png</texturebg>
						<lefttexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</lefttexture>
						<midtexture colordiffuse="$VAR[UnwatchedColourHighlight]">osd/progress-end.png</midtexture>
						<righttexture colordiffuse="$VAR[EmbyMenuTextColourHighlight]">osd/progress-end.png</righttexture>
						<visible>Container(518).ListItem.IsResumable</visible>
					</control>
					<control type="group">
						<top>481</top>
						<control type="label">
							<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
							<centerright>160</centerright>
							<centertop>34</centertop>
							<width>40</width>
							<height>40</height>
							<font>symbolback</font>
							<label>$VAR[PercentWatchedBack518]</label>
							<textcolor>$VAR[BackingColourHighlight]</textcolor>
							<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
						</control>
						<control type="group">
							<control type="label">
								<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
								<centerright>160</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<align>center</align>
								<font>minisymbol</font>
								<label>$VAR[PercentWatchedLabel518]</label>
								<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
								<scroll>true</scroll>
								<visible>[Container(518).Content(tvshows) | Container(518).Content(seasons)]</visible>
							</control>
							<control type="label">
								<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
								<centerright>156</centerright>
								<centertop>35</centertop>
								<width>32</width>
								<height>32</height>
								<font>symbolview</font>
								<label>$VAR[PercentWatchedLabel518]</label>
								<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
								<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
								<visible>![Container(518).Content(tvshows) | Container(518).Content(seasons)]</visible>
							</control>
							<visible>!stringcompare(Container(518).ListItem.Label,..) + stringcompare(Container(518).ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !Container(518).ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
							<centerright>151</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[ItemsPlayingIcon518]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
							<visible>!stringcompare(Container(518).ListItem.Label,..) + Container(518).ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
							<centerright>156</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel518]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
							<visible>!stringcompare(Container(518).ListItem.Label,..) + stringcompare(Container(518).ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<animation effect="zoom" end="180" start="100" time="0" center="auto" condition="true">Conditional</animation>
							<centerright>156</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel518]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
							<visible>!stringcompare(Container(518).ListItem.Label,..) + Container(518).ListItem.IsResumable</visible>
						</control>
					</control>
				</control>
			</control>
		</control>
	</include>
</includes>
