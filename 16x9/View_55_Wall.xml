<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_55_Wall">
		<control type="group">
			<include condition="!Skin.HasSetting(low.power)">Animation.Common</include>
			<include condition="Skin.HasSetting(low.power)">Animation.Common.Lowpower</include>
			<include condition="!Skin.HasSetting(low.power)">Animation.Common.Overlay</include>
			<include condition="Skin.HasSetting(low.power)">Animation.Common.Overlay.Lowpower</include>
			<visible>Control.IsVisible(55)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<animation effect="slide" end="-30,0" center="auto" time="200" condition="Container.Column(7)">Conditional</animation>
			<animation effect="slide" end="30,0" center="auto" time="200" condition="Container.Column(0)">Conditional</animation>
			<animation effect="slide" end="0,0" center="auto" time="200" condition="Container.Row(1)">Conditional</animation>
			<animation effect="slide" end="0,10" center="auto" time="200" condition="Container.Row(0)">Conditional</animation>
			<animation effect="slide" end="240,0" center="auto" time="200" condition="Container.Column(0) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-240,0" center="auto" time="200" condition="Container.Column(2) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-480,0" center="auto" time="200" condition="Container.Column(3) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-720,0" center="auto" time="200" condition="Container.Column(4) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-960,0" center="auto" time="200" condition="Container.Column(5) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-1200,0" center="auto" time="200" condition="Container.Column(6) + !Control.HasFocus(60)">Conditional</animation>
			<animation effect="slide" end="-1440,0" center="auto" time="200" condition="Container.Column(7) + !Control.HasFocus(60)">Conditional</animation>
			<control type="panel" id="55">
				<visible>Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)</visible>
				<top>TopPad</top>
				<right>0</right>
				<width>1920</width>
				<height>720</height>
				<onleft condition="Control.IsVisible(60)">60</onleft>
				<onleft condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onleft>
				<onright condition="Control.IsVisible(60)">60</onright>
				<onright condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onright>
				<onup>55</onup>
				<ondown>55</ondown>
				<preloaditems>2</preloaditems>
				<pagecontrol>60</pagecontrol>
				<viewtype label="536">list</viewtype>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout width="240" height="360">
					<control type="group">
						<visible>Container.Row(0)</visible>
						<top>180</top>
						<bottom>-180</bottom>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[PosterImage]</texture>
							<animation effect="fade" start="90" end="90" time="00" reversible="false" condition="true">conditional</animation>
						</control>
						<control type="group">
							<control type="label">
								<centerright>34</centerright>
								<centertop>33</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="group">
								<control type="label">
									<centerright>34</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<align>center</align>
									<font>minisymbol</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<scroll>true</scroll>
									<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>29</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[ItemsPlayingIcon]</label>
									<textcolor>$VAR[PlayingColourHighlight]</textcolor>
									<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[WatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[ResumeColourHighlight]</textcolor>
									<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
						</control>
					</control>
					<control type="group">
						<visible>Container.Row(1)</visible>
						<top>-180</top>
						<bottom>180</bottom>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[PosterImage]</texture>
							<animation effect="fade" start="90" end="90" time="00" reversible="false" condition="true">conditional</animation>
						</control>
						<control type="group">
							<control type="label">
								<centerright>34</centerright>
								<centertop>33</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="group">
								<control type="label">
									<centerright>34</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<align>center</align>
									<font>minisymbol</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<scroll>true</scroll>
									<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>29</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[ItemsPlayingIcon]</label>
									<textcolor>$VAR[PlayingColourHighlight]</textcolor>
									<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[WatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[ResumeColourHighlight]</textcolor>
									<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="240" height="360">
					<control type="group">
						<visible>Container.Row(0)</visible>
						<animation effect="zoom" start="100" end="145" time="100" reversible="false" center="auto">Focus</animation>
						<top>180</top>
						<bottom>-180</bottom>
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus>SetProperty(cfa_ignore_set,True,home)</onfocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
							<onfocus condition="!Skin.HasSetting(low.power)">RunScript(script.colorbox,info=blur,id='"$VAR[PosterImage]"',radius=$VAR[VideoInfoBlurLevel],prefix=VideoInfo)</onfocus>
						</control>
						<control type="image">
							<left>0</left>
							<top>2</top>
							<right>0</right>
							<bottom>2</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true" colordiffuse="$VAR[BorderHighlightColour]">$VAR[FocusedBorderImage]</texture>
							<animation effect="zoom" end="107" time="0" center="auto">Focus</animation>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[PosterImage]</texture>
							<animation type="Focus" reversible="false">
								<effect type="rotate" end="1" start="0" time="200" center="auto" tween="quadratic" easing="out"/>
							</animation>
						</control>
						<control type="group">
							<control type="label">
								<centerright>34</centerright>
								<centertop>33</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="group">
								<control type="label">
									<centerright>34</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<align>center</align>
									<font>minisymbol</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<scroll>true</scroll>
									<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>29</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[ItemsPlayingIcon]</label>
									<textcolor>$VAR[PlayingColourHighlight]</textcolor>
									<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[WatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[ResumeColourHighlight]</textcolor>
									<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
						</control>
					</control>
					<control type="group">
						<visible>Container.Row(1)</visible>
						<animation effect="zoom" start="100" end="145" time="100" reversible="false" center="auto">Focus</animation>
						<top>-180</top>
						<bottom>180</bottom>
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus>SetProperty(cfa_ignore_set,True,home)</onfocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
							<onfocus condition="!Skin.HasSetting(low.power)">RunScript(script.colorbox,info=blur,id='"$VAR[PosterImage]"',radius=$VAR[VideoInfoBlurLevel],prefix=VideoInfo)</onfocus>
						</control>
						<control type="image">
							<left>0</left>
							<top>2</top>
							<right>0</right>
							<bottom>2</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true" colordiffuse="$VAR[BorderHighlightColour]">$VAR[FocusedBorderImage]</texture>
							<animation effect="zoom" end="107" time="0" center="auto">Focus</animation>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[PosterImage]</texture>
							<animation type="Focus" reversible="false">
								<effect type="rotate" end="1" start="0" time="200" center="auto" tween="quadratic" easing="out"/>
							</animation>
						</control>
						<control type="group">
							<control type="label">
								<centerright>34</centerright>
								<centertop>33</centertop>
								<width>40</width>
								<height>40</height>
								<font>symbolback</font>
								<label>$VAR[PercentWatchedBack]</label>
								<textcolor>$VAR[BackingColourHighlight]</textcolor>
								<selectedcolor>$VAR[BackingColourHighlight]</selectedcolor>
							</control>
							<control type="group">
								<control type="label">
									<centerright>34</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<align>center</align>
									<font>minisymbol</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<scroll>true</scroll>
									<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[UnwatchedColourHighlight]</selectedcolor>
									<visible>![Container.Content(tvshows) | Container.Content(seasons)]</visible>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + [!Skin.HasSetting(furniture.hidenew) | Skin.HasSetting(furniture.unwatched)] + !ListItem.IsResumable</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>29</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[ItemsPlayingIcon]</label>
									<textcolor>$VAR[PlayingColourHighlight]</textcolor>
									<selectedcolor>$VAR[PlayingColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[WatchedColourHighlight]</textcolor>
									<selectedcolor>$VAR[WatchedColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
							</control>
							<control type="group">
								<control type="label">
									<centerright>32</centerright>
									<centertop>33</centertop>
									<width>32</width>
									<height>32</height>
									<font>symbolview</font>
									<label>$VAR[PercentWatchedLabel]</label>
									<textcolor>$VAR[ResumeColourHighlight]</textcolor>
									<selectedcolor>$VAR[ResumeColourHighlight]</selectedcolor>
								</control>
								<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
							</control>
						</control>
					</control>
				</focusedlayout>
			</control>
			<include>Furniture_ScrollbarM</include>
		</control>
	</include>
</includes>
